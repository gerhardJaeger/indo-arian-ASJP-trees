taxa <- readTaxonData("bears_taxa.tsv")


n_taxa <- taxa.size()

moves = VectorMoves()

speciation_rate ~ dnExponential(10)
extinction_rate ~ dnExponential(10)

moves.append( mvScale(speciation_rate, lambda=0.01, weight=1) )
moves.append( mvScale(speciation_rate, lambda=0.1,  weight=1) )
moves.append( mvScale(speciation_rate, lambda=1.0,  weight=1) )

moves.append( mvScale(extinction_rate, lambda=0.01, weight=1) )
moves.append( mvScale(extinction_rate, lambda=0.1,  weight=1) )
moves.append( mvScale(extinction_rate, lambda=1,    weight=1) )

rho <- 1.0


psi ~ dnExponential(10) 

moves.append( mvScale(psi, lambda=0.01, weight=1) )
moves.append( mvScale(psi, lambda=0.1,  weight=1) )
moves.append( mvScale(psi, lambda=1,    weight=1) )

origin_time ~ dnUnif(37.0, 55.0)

moves.append( mvSlide(origin_time, delta=0.01, weight=5.0) )
moves.append( mvSlide(origin_time, delta=0.1,  weight=5.0) )
moves.append( mvSlide(origin_time, delta=1,    weight=5.0) )

fbd_dist = dnFBDP(origin=origin_time,
                  lambda=speciation_rate,
                  mu=extinction_rate,
                  psi=psi,
                  rho=rho,
                  taxa=taxa)

clade_ursinae = clade("Melursus_ursinus", "Ursus_arctos", "Ursus_maritimus", 
                      "Helarctos_malayanus", "Ursus_americanus", "Ursus_thibetanus", 
                      "Ursus_abstrusus", "Ursus_spelaeus")

constraints = v(clade_ursinae)
fbd_tree ~ dnConstrainedTopology(fbd_dist, constraints=constraints)

moves.append( mvFNPR(fbd_tree, weight=15.0) )
moves.append( mvCollapseExpandFossilBranch(fbd_tree, origin_time, weight=6.0) )

moves.append( mvNodeTimeSlideUniform(fbd_tree, weight=40.0) )
moves.append( mvRootTimeSlideUniform(fbd_tree, origin_time, weight=5.0) )

fossils = fbd_tree.getFossils()
for(i in 1:fossils.size())
{
    t[i] := tmrca(fbd_tree, clade(fossils[i]))

    a_i = fossils[i].getMinAge()
    b_i = fossils[i].getMaxAge()

    F[i] ~ dnUniform(t[i] - b_i, t[i] - a_i)
    F[i].clamp( 0 )
}

nFossils := fbd_tree.getFossils().size()


moves.append( mvFossilTimeSlideUniform(fbd_tree, origin_time, weight=5.0) )

num_samp_anc := fbd_tree.numSampledAncestors();

mymodel = model(nFossils, fbd_tree)

monitors = VectorMonitors()


monitors.append( mnModel(filename="output/bears.log", printgen=10) )

monitors.append( mnFile(filename="output/bears.trees", printgen=10, fbd_tree) )

monitors.append( mnScreen(printgen=10, nFossils, origin_time) )

mymcmc = mcmc(mymodel, monitors, moves)

mymcmc.run(generations=10000)
